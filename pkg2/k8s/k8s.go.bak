package k8s

import (
	"k8s.io/client-go/dynamic"
	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/tools/clientcmd"
)

// NewClientset 创建一个 clientset 客户端
func NewClientset() (clientset *kubernetes.Clientset, error error) {
	// use the current context in kubeconfig
	config, err := clientcmd.BuildConfigFromFlags("", *kubeconfig)
	if err != nil {
		return
	}
	// create the clientset
	clientset, err = kubernetes.NewForConfig(config)
	if err != nil {
		return
	}
	return
}

// NewDynamic 创建一个 dynamic 客户端
func NewDynamic() (client dynamic.Interface, error error) {
	// use the current context in kubeconfig
	config, err := clientcmd.BuildConfigFromFlags("", *kubeconfig)
	if err != nil {
		return
	}
	// create the dynamic
	client, err = dynamic.NewForConfig(config)
	if err != nil {
		return
	}
	return
}
